// <auto-generated />
using System;
using Medsoft_სატესტო_პროგრამა.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Medsoft_სატესტო_პროგრამა.Migrations
{
    [DbContext(typeof(PatientAppDbContext))]
    partial class PatientAppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Medsoft_სატესტო_პროგრამა.Models.Dbos.Gender", b =>
                {
                    b.Property<int>("GenderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("genderID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GenderId"));

                    b.Property<string>("GenderName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("gender_name");

                    b.HasKey("GenderId");

                    b.ToTable("gender", (string)null);

                    b.HasData(
                        new
                        {
                            GenderId = 1,
                            GenderName = "მამრობითი"
                        },
                        new
                        {
                            GenderId = 2,
                            GenderName = "მდედრობითი"
                        });
                });

            modelBuilder.Entity("Medsoft_სატესტო_პროგრამა.Models.Dbos.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("address");

                    b.Property<DateOnly>("Dob")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("full_name");

                    b.Property<int>("GenderId")
                        .HasColumnType("int")
                        .HasColumnName("genderID");

                    b.Property<string>("PatientId")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("patient_id");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("phone");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "GenderId" }, "IX_patient_genderID");

                    b.ToTable("patient", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "22/24 Ioane Shavteli St",
                            Dob = new DateOnly(1987, 1, 21),
                            Email = "luka123@gmail.com",
                            FullName = "ლუკა არჯევანიძე",
                            GenderId = 1,
                            PatientId = "3157747508",
                            Phone = "599123456"
                        },
                        new
                        {
                            Id = 2,
                            Address = "7 Apolon Kutateladze Street",
                            Dob = new DateOnly(1992, 11, 4),
                            Email = "qeti321@gmail.com",
                            FullName = "ქეთი ბოკერია",
                            GenderId = 2,
                            PatientId = "0509342681",
                            Phone = "598654321"
                        },
                        new
                        {
                            Id = 3,
                            Address = "36 Giorgi Maruashvili St",
                            Dob = new DateOnly(1998, 12, 17),
                            Email = "leqsogogichadze1998@gmail.com",
                            FullName = "ლექსო გოგიჩაძე",
                            GenderId = 1,
                            PatientId = "6006784558",
                            Phone = "577162534"
                        },
                        new
                        {
                            Id = 4,
                            Address = "23a/23b Grigol Robakidze Ave",
                            Dob = new DateOnly(2006, 4, 29),
                            Email = "hakim@gmail.com",
                            FullName = "რევაზ თოდრაძე",
                            GenderId = 1,
                            PatientId = "4562856692",
                            Phone = "555112233"
                        },
                        new
                        {
                            Id = 5,
                            Address = "32 Kiketi Street",
                            Dob = new DateOnly(1989, 5, 20),
                            Email = "bcglobal@gmail.com",
                            FullName = "გიორგი ისაკაძე",
                            GenderId = 1,
                            PatientId = "4846641520",
                            Phone = "599181818"
                        },
                        new
                        {
                            Id = 6,
                            Address = "6 Somkheti St",
                            Dob = new DateOnly(2002, 3, 3),
                            Email = "hahiss@gmail.com",
                            FullName = "ლევან მახათაძე",
                            GenderId = 1,
                            PatientId = "123123",
                            Phone = "595471298"
                        },
                        new
                        {
                            Id = 7,
                            Address = "47a Vazha Pshavela Ave",
                            Dob = new DateOnly(1993, 10, 9),
                            Email = "user14215@gmail.com",
                            FullName = "ანა კუპრაძე",
                            GenderId = 2,
                            PatientId = "9144403714",
                            Phone = "595876492"
                        },
                        new
                        {
                            Id = 8,
                            Address = "27 Vakhtang Chikovani St",
                            Dob = new DateOnly(1997, 7, 5),
                            Email = "mariammariam@gmail.com",
                            FullName = "მარიამ ყაზარაშვილი",
                            GenderId = 2,
                            PatientId = "2453063596",
                            Phone = "571422312"
                        });
                });

            modelBuilder.Entity("Medsoft_სატესტო_პროგრამა.Models.Dbos.Patient", b =>
                {
                    b.HasOne("Medsoft_სატესტო_პროგრამა.Models.Dbos.Gender", "Gender")
                        .WithMany("Patients")
                        .HasForeignKey("GenderId")
                        .IsRequired()
                        .HasConstraintName("FK_patient_gender");

                    b.Navigation("Gender");
                });

            modelBuilder.Entity("Medsoft_სატესტო_პროგრამა.Models.Dbos.Gender", b =>
                {
                    b.Navigation("Patients");
                });
#pragma warning restore 612, 618
        }
    }
}
